// Число

// Тип данных для работы с числами



/* Кратко

    Тип данных «число» (number) содержит числа с плавающей точкой в 
    диапазоне от -(253 − 1) до 253 − 1, а также специальные значения 
    Infinity, -Infinity и NaN.


    Для этого типа данных определены стандартные арифметические операции 
    сложения +, вычитания -, умножения *, деления /, взятия остатка от 
    целочисленного деления %, сравнения >, <, >=, <=, ==, ===, !=, !==.



    В JavaScript отсутствует отдельный тип данных для целых чисел,
     для целых чисел также используется тип number.

*/ 

/* Как пишется 

    Для записи чисел используются цифры, для разделения целой и 
    десятичной части используется точка:

*/ 



const int = 4
const decimal = 0.101
const sameDecimal = .101


// Можно использовать экспоненциальную запись. Например, 
// один миллион в экспоненциальной записи:


const scientific = 1e6
console.log(scientific)



/* Числа так же могут быть представлены в двоичном,

    восьмеричном или шестнадцатеричном виде. Такие числа начинаются
    с приставки 0b, 0o, 0x соответственно. При выводе на экран они
    будут преобразованы в десятичную систему счисления:


*/ 

const binary = 0b11
console.log(binary)
// 3


const octal = 0o77
console.log(octal)
// 63

const hexademical = 0xff
console.log(hexademical)
// 255



/* Как понять Число с плавающей точкой

    Число в JavaScript представлено в виде 64-битного формата IEEE-754.
    Формат хранит произвольное число в виде трёх значений: 1 бит на знак
    числа, 52 бита значения числа и ещё 11 бит местоположения точки.
    С таким подходом можно эффективно хранить значения в большом
    диапазоне от -(253 − 1) до 253 − 1.



    Из-за того, что положение точки в числе хранится отдельным значением, 
    формат и называется числом с плавающей точкой (floating point number).



    Проблема этого представления в том, что оно не может представить числа
     абсолютно точно, а только с некоторой погрешностью.

*/ 



/* Неточные вычисления

    В десятичной системе счисления есть числа, которые не могут быть 
    записаны точно. Например, треть ¹⁄₃ записывается как бесконечная дробь
     0.33(3).




    Компьютер хранит данные в двоичном виде — наборе нулей и единиц. 
    В этой системе счисления тоже есть дроби, которые не могут быть 
    записаны точно. В этом случае формат округляет значение до ближайшего
     представимого. При арифметических операциях эти неточности
      складываются и приводят к эффектам, подобным этому:

*/


console.log(0.2 + 0.7)
// 0.8999999999999999


